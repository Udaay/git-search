{"version":3,"sources":["Entry.js","Details.js","App.js","index.js"],"names":["Entry","props","handleChange","event","setState","input","target","value","handlePress","e","keyCode","handleSubmit","state","handleEntry","document","querySelector","className","placeholder","type","autoFocus","onChange","this","onKeyDown","onClick","Component","Details","user","username","name","location","followers","public_repos","Fragment","App","url","request","XMLHttpRequest","open","responseType","send","onload","console","log","response","message","fetched","pic","React","ReactDOM","render","getElementById"],"mappings":"+OAEqBA,E,YACnB,WAAYC,GAAO,IAAD,8BAChB,4CAAMA,KASRC,aAAe,SAACC,GACd,EAAKC,SAAS,CAACC,MAAOF,EAAMG,OAAOC,SAXnB,EAclBC,YAAc,SAACC,GACI,KAAdA,EAAEC,SAEJ,EAAKC,gBAjBU,EAqBlBA,aAAe,WAEA,KADG,EAAKC,MAAfP,OAEJ,EAAKJ,MAAMY,YAAY,EAAKD,MAAMP,OAEpC,EAAKD,SAAS,CAACC,MAAO,KACtBS,SAASC,cAAc,SAASR,MAAQ,IAzBxC,EAAKK,MAAQ,CACXP,MAAO,IAHO,E,sEA+BhB,OACE,yBAAKW,UAAW,UACb,2BAAOC,YAAY,mBAAmBC,KAAK,OAAOC,WAAS,EAACC,SAAWC,KAAKnB,aAAcoB,UAAaD,KAAKb,cAC5G,6BACA,4BAAQe,QAASF,KAAKV,cAAtB,+B,GApC0Ba,a,MCApB,SAASC,EAAQxB,GAAQ,IAAD,EACyBA,EAAMyB,KAA5DC,EAD6B,EAC7BA,SAAUC,EADmB,EACnBA,KAAMC,EADa,EACbA,SAAUC,EADG,EACHA,UAAWC,EADR,EACQA,aAC7C,OACE,kBAAC,IAAMC,SAAP,KACE,gCAAML,EAAN,KACA,wCAAa,6BAAb,IAAoBC,EAApB,KACA,wCAAa,6BAAb,IAAoBC,EAApB,KACA,yCAAc,6BAAd,IAAqBC,EAArB,KACA,kDAAuB,6BAAvB,IAA8BC,EAA9B,M,ICLeE,E,YACnB,WAAYhC,GACX,IAAD,8BACE,4CAAMA,KAaRY,YAAc,SAACc,GACb,IAAIO,EAAG,uCAAmCP,GACtCQ,EAAU,IAAIC,eAClBD,EAAQE,KAAK,MAAMH,GACnBC,EAAQG,aAAe,OACvBH,EAAQI,OAERJ,EAAQK,OAAS,WACfC,QAAQC,IAAIP,EAAQQ,UADC,MAEqCR,EAAQQ,SAA5Df,EAFe,EAEfA,KAAMC,EAFS,EAETA,SAAUC,EAFD,EAECA,UAAWC,EAFZ,EAEYA,aAFZ,EAE0Ba,UAE7C,EAAKC,SAAU,GAEjB,EAAKzC,SAAS,CAACuB,WACfC,OACAC,WACAC,YACAC,mBA7BF,EAAKnB,MAAQ,CACXe,SAAU,QACVC,KAAK,GACLkB,IAAI,GACJjB,SAAS,GACTC,UAAW,GACXC,aAAa,GACbG,IAAI,IAEN,EAAKW,SAAU,EAXjB,E,sEAsCE,OACE,kBAAC,IAAMb,SAAP,KACE,kBAAC,EAAD,CAAOnB,YAAaQ,KAAKR,cACvBQ,KAAKwB,SAAW,kBAACpB,EAAD,CAASC,KAAML,KAAKT,a,GA3CbmC,IAAMvB,WCAvCwB,IAASC,OAAO,kBAAC,EAAD,MAASnC,SAASoC,eAAe,U","file":"static/js/main.672215e8.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nexport default class Entry extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      input: '',\r\n    }\r\n    // this.handleChange= this.handleChange.bind(this);\r\n    // this.handleSubmit= this.handleSubmit.bind(this);\r\n    // this.handlePress= this.handlePress.bind(this);\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    this.setState({input: event.target.value});\r\n  }\r\n\r\n  handlePress = (e) => {\r\n    if(e.keyCode === 13) // To Handle Enter Button\r\n    {\r\n     this.handleSubmit();\r\n    }\r\n  } \r\n\r\n  handleSubmit = () => {\r\n    let { input } = this.state\r\n    if(input !== ''){\r\n      this.props.handleEntry(this.state.input);\r\n    }\r\n    this.setState({input: ''})\r\n    document.querySelector('input').value = '';\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className= 'bottom'>\r\n         <input placeholder=\"type username...\" type=\"text\" autoFocus onChange= {this.handleChange} onKeyDown = {this.handlePress} />\r\n         <br></br>\r\n         <button onClick={this.handleSubmit} > Search GitHub user   </button>\r\n      </div>\r\n    );\r\n  }\r\n} \r\n","import React from 'react'\r\n\r\nexport default function Details(props) {\r\n  const { username, name, location, followers, public_repos } = props.user\r\n  return(\r\n    <React.Fragment>\r\n      <h3> {username} </h3>\r\n      <p>Real name <br/> {name} </p>\r\n      <p> Location <br/> {location} </p>\r\n      <p> Followers <br/> {followers} </p>\r\n      <p> Number Public Repo <br/> {public_repos} </p>\r\n    </React.Fragment>\r\n  )\r\n}","import React from 'react';\nimport Entry from './Entry'\nimport './App.css';\nimport Details from './Details';\n\nexport default class App extends React.Component {\n  constructor(props)\n  {\n    super(props);\n    this.state = {\n      username: 'udaay',\n      name:'',\n      pic:'',\n      location:'',\n      followers: '',\n      public_repos:'',\n      url:''\n    };\n    this.fetched = true;\n  }\n\n  handleEntry = (username) => {\n    let url = `https://api.github.com/users/${username}`\n    let request = new XMLHttpRequest();\n    request.open('GET',url)\n    request.responseType = 'json';\n    request.send();\n    // let r = request;\n    request.onload = () => {\n      console.log(request.response);\n      let { name, location, followers, public_repos, message} = request.response;\n      if(message){\n        this.fetched = false;\n      }\n      this.setState({username,\n      name,\n      location,\n      followers,\n      public_repos\n      })\n    }\n    // Use setState to \n  }\n\n  render() {\n    return(\n      <React.Fragment>\n        <Entry handleEntry={this.handleEntry} />\n        { this.fetched && <Details user={this.state} />}\n      </React.Fragment>\n    );\n  }\n\n}\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}