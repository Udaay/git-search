{"version":3,"sources":["Entry.js","Details.js","GitSearch.js","index.js","App.js"],"names":["Entry","props","handleChange","event","setState","input","target","value","handlePress","e","keyCode","handleSubmit","state","handleEntry","document","querySelector","className","placeholder","type","autoFocus","onChange","this","onKeyDown","onClick","Component","Details","user","username","name","location","followers","public_repos","html_url","avatar_url","Fragment","src","alt","href","GitSearch","url","fetch","then","res","json","data","extractData","pic","fetched","showDetails","response","login","message","notFound","React","ReactDOM","render","getElementById"],"mappings":"0NAEqBA,E,YACnB,WAAYC,GAAO,IAAD,8BAChB,4CAAMA,KAMRC,aAAe,SAACC,GACd,EAAKC,SAAS,CAACC,MAAOF,EAAMG,OAAOC,SARnB,EAWlBC,YAAc,SAACC,GACI,KAAdA,EAAEC,SAEJ,EAAKC,gBAdU,EAkBlBA,aAAe,WAEA,KADG,EAAKC,MAAfP,OAEJ,EAAKJ,MAAMY,YAAY,EAAKD,MAAMP,OAEpC,EAAKD,SAAS,CAACC,MAAO,KACtBS,SAASC,cAAc,SAASR,MAAQ,IAtBxC,EAAKK,MAAQ,CACXP,MAAO,IAHO,E,sEA4BhB,OACE,yBAAKW,UAAW,SACb,2BAAOC,YAAY,mBAAmBC,KAAK,OAAOC,WAAS,EAACC,SAAWC,KAAKnB,aAAcoB,UAAaD,KAAKb,cAC5G,6BACA,4BAAQe,QAASF,KAAKV,cAAtB,+B,GAjC0Ba,aCApB,SAASC,EAAQxB,GAAQ,IAAD,EAC8CA,EAAMyB,KAAjFC,EAD6B,EAC7BA,SAAUC,EADmB,EACnBA,KAAMC,EADa,EACbA,SAAUC,EADG,EACHA,UAAWC,EADR,EACQA,aAAcC,EADtB,EACsBA,SAASC,EAD/B,EAC+BA,WACpE,OACE,kBAAC,IAAMC,SAAP,KACA,yBAAKlB,UAAU,UAAf,IAA0B,yBAAKmB,IAAKF,EAAYG,IAAI,mBAApD,KACA,yBAAKpB,UAAU,WACd,uBAAGqB,KAAQL,EAAU1B,OAAQ,SAA7B,IAAuC,gCAAMqB,EAAN,MACtC,wCAAa,6BAAb,IAAmB,8BAAOC,GAA1B,KACA,wCAAa,6BAAb,IAAmB,kCAAQC,EAAR,KAAnB,KACA,yCAAc,6BAAd,IAAoB,kCAASC,GAA7B,KACA,kDAAuB,6BAAvB,IAA6B,kCAAQC,EAAR,KAA7B,O,ICReO,E,YACnB,WAAYrC,GACX,IAAD,8BACE,4CAAMA,KA8BRY,YAAc,SAACc,GACb,IAAIY,EAAG,uCAAmCZ,GAC1Ca,MAAMD,GAAKE,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAAQF,MAAK,SAAAG,GAAI,OAAI,EAAKC,YAAYD,OA/BjE,EAAKhC,MAAQ,CACXe,SAAU,GACVC,KAAK,GACLkB,IAAI,GACJjB,SAAS,GACTC,UAAW,GACXC,aAAa,GACbC,SAAS,GACTC,WAAW,IAEb,EAAKc,SAAU,EACf,EAAKC,aAAc,EAbrB,E,yEAgBaC,GACX5B,KAAK2B,aAAc,EADE,IAEbE,EAAiFD,EAAjFC,MAAOtB,EAA0EqB,EAA1ErB,KAAMC,EAAoEoB,EAApEpB,SAAUC,EAA0DmB,EAA1DnB,UAAWC,EAA+CkB,EAA/ClB,aAAcoB,EAAiCF,EAAjCE,QAASnB,EAAwBiB,EAAxBjB,SAAUC,EAAcgB,EAAdhB,WACzEZ,KAAK0B,SAAUI,EACf9B,KAAK+B,UAAY/B,KAAK0B,QACtB1B,KAAKjB,SAAS,CAACuB,SAAUuB,EACzBtB,OACAC,WACAC,YACAC,eACAC,WACAC,iB,+BA6BF,OACE,kBAAC,IAAMC,SAAP,KACE,kBAAC,EAAD,CAAOrB,YAAaQ,KAAKR,cACxBQ,KAAK2B,aAAe3B,KAAK0B,SAAW,kBAACtB,EAAD,CAASC,KAAML,KAAKT,QACxDS,KAAK2B,cAAiB3B,KAAK0B,SAAW,0D,GA9DRM,IAAM7B,WCC7C8B,IAASC,OAAO,mBCFD,WACb,OACE,kBAAC,EAAD,QDAY,MAASzC,SAAS0C,eAAe,U","file":"static/js/main.1dd2109e.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nexport default class Entry extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      input: '',\r\n    };\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    this.setState({input: event.target.value});\r\n  }\r\n\r\n  handlePress = (e) => {\r\n    if(e.keyCode === 13) // To Handle Enter Button\r\n    {\r\n     this.handleSubmit();\r\n    }\r\n  } \r\n\r\n  handleSubmit = () => {\r\n    let { input } = this.state\r\n    if(input !== ''){\r\n      this.props.handleEntry(this.state.input);\r\n    }\r\n    this.setState({input: ''});\r\n    document.querySelector('input').value = '';\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className= 'entry'>\r\n         <input placeholder=\"type username...\" type=\"text\" autoFocus onChange= {this.handleChange} onKeyDown = {this.handlePress} />\r\n         <br></br>\r\n         <button onClick={this.handleSubmit} > Search GitHub user   </button>\r\n      </div>\r\n    );\r\n  }\r\n} \r\n","import React from 'react'\r\n\r\nexport default function Details(props) {\r\n  const { username, name, location, followers, public_repos, html_url,avatar_url } = props.user;\r\n  return(\r\n    <React.Fragment>\r\n    <div className='circle' > <img src={avatar_url} alt='Display Avatar'/> </div>\r\n    <div className='details' >\r\n     <a href = {html_url} target= 'blank' > <h3> {username} </h3></a> \r\n      <p>Real name <br/> <span>{name}</span> </p>\r\n      <p> Location <br/> <span> {location} </span> </p>\r\n      <p> Followers <br/> <span> { followers}</span> </p>\r\n      <p> Number Public Repo <br/> <span> {public_repos} </span> </p>\r\n    </div>\r\n    </React.Fragment>\r\n  )\r\n}","import React from 'react';\nimport Entry from './Entry'\nimport Details from './Details';\n\nexport default class GitSearch extends React.Component {\n  constructor(props)\n  {\n    super(props);\n    this.state = {\n      username: '',\n      name:'',\n      pic:'',\n      location:'',\n      followers: '',\n      public_repos:'',\n      html_url:'',\n      avatar_url:'',\n    };\n    this.fetched = false;\n    this.showDetails = false;\n  }\n\n  extractData (response) {\n    this.showDetails = true;\n      let { login, name, location, followers, public_repos, message, html_url, avatar_url} = response;\n      this.fetched = message ? false : true;\n      this.notFound = !this.fetched;\n      this.setState({username: login,\n      name,\n      location,\n      followers,\n      public_repos,\n      html_url,\n      avatar_url,\n      });\n  }\n\n  handleEntry = (username) => {\n    let url = `https://api.github.com/users/${username}`;\n    fetch(url).then(res => res.json()).then(data => this.extractData(data));\n    // let request = new XMLHttpRequest();\n    // request.open('GET',url)\n    // request.responseType = 'json';\n    // request.send();\n    // request.onload = () => {\n    //   this.showDetails = true;\n    //   let { login, name, location, followers, public_repos, message, html_url, avatar_url} = request.response;\n    //   console.log(request.response);\n    //   this.fetched = message ? false : true;\n    //   this.notFound = !this.fetched;\n    //   this.setState({username: login,\n    //   name,\n    //   location,\n    //   followers,\n    //   public_repos,\n    //   html_url,\n    //   avatar_url,\n    //   });\n    // }\n  }\n\n  render() {\n    return(\n      <React.Fragment>\n        <Entry handleEntry={this.handleEntry} />\n       { this.showDetails && this.fetched && <Details user={this.state}/>}\n       { this.showDetails &&  (this.fetched || <p > Oops user Not found </p>)} \n      </React.Fragment>\n    );\n  }\n\n}\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n","import React from 'react'\r\nimport GitSearch from './GitSearch'\r\n\r\nexport default function App() {\r\n  return(\r\n    <GitSearch/>\r\n  )\r\n}"],"sourceRoot":""}